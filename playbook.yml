---
- name: Vaultops | Prepare
  hosts: localhost
  gather_facts: false
  become: false
  no_log: "{{ pv_global_config_no_log | default('true') }}"
  tags: vault,vault_system_install,vault_dr,never
  tasks:
      - name: Vaultops | Prepare | Download Vault binary
        when: false # Move to s3
        ansible.builtin.get_url:
            dest: "{{ vaultops_tmp_dir_path }}/vault_{{ vault_rv_version }}_linux_{{ item.key }}.zip"
            mode: "0o644"
            checksum: sha256:{{ item.value['sha256sum'][vault_rv_version] }}
            url: "https://releases.hashicorp.com/vault/{{ vault_rv_version }}/\
                vault_{{ vault_rv_version }}_linux_{{ item.value['vault_arch'] }}.zip"
        loop: "{{ pv_vault_info_map | dict2items }}"

      - name: Vaultops | Prepare | Download Vault binary
        when: false # TODO: Unable to download encrypted files from S3
        amazon.aws.s3_object:
            bucket: "{{ vaultops_s3_bucket_name }}"
            encrypt: true
            encryption_mode: AES256
            encryption_kms_key_id: "{{ vaultops_s3_aes256_sse_customer_key_base64 }}"
            access_key: "{{ vaultops_s3_access_key }}"
            secret_key: "{{ vaultops_s3_secret_key }}"
            region: "{{ vaultops_s3_region }}"
            sig_v4: "{{ (vaultops_s3_signature_version == 's3v4') | ternary(true, false) }}"
            object: "bin/{{ vault_rv_version }}/vault_{{ vault_rv_version }}_linux_{{ item.value['vault_arch'] }}.zip"
            dest: "{{ vaultops_tmp_dir_path }}/vault_{{ vault_rv_version }}_linux_{{ item.key }}.zip"
            endpoint_url: "{{ vaultops_s3_endpoint_url }}"
            mode: get
            aws_config:
                signature_version: "{{ vaultops_s3_signature_version }}"
            headers:
                x-amz-server-side-encryption-customer-algorithm: AES256
                x-amz-server-side​-encryption​-customer-key: "{{ vaultops_s3_aes256_sse_customer_key_base64 |
                    b64decode }}"
                x-amz-server-side​-encryption​-customer-key-MD5: "{{ vaultops_s3_aes256_sse_customer_key_base64 |
                    b64decode | md5 }}"
                x-amz-content-sha256: "{{ item.value['sha256sum'][vault_rv_version] }}"
        loop: "{{ pv_vault_info_map | dict2items }}"

      - name: Vaultops | Prepare | Download Vault binary
        # TODO: Unable to download encrypted files from S3 using amazon.aws.s3_object therefore using s4cmd
        ansible.builtin.command:
            argv:
                - s4cmd
                - get
                - --endpoint-url={{ vaultops_s3_endpoint_url }}
                - --API-SSECustomerAlgorithm=AES256
                - --API-SSECustomerKey={{ vaultops_s3_aes256_sse_customer_key_base64 | b64decode }}
                # - --API-SSECustomerKeyMD5={{ vaultops_s3_aes256_sse_customer_key_base64 | b64decode | md5 }}
                - "s3://{{ vaultops_s3_bucket_name }}/bin/{{ vault_rv_version }}/vault_{{ vault_rv_version }}_linux_\
                  {{ item.value['vault_arch'] }}.zip"
                - "{{ vaultops_tmp_dir_path }}/vault_{{ vault_rv_version }}_linux_{{ item.key }}.zip"
            creates: "{{ vaultops_tmp_dir_path }}/vault_{{ vault_rv_version }}_linux_{{ item.key }}.zip"
        environment:
            S3_ACCESS_KEY: "{{ vaultops_s3_access_key }}"
            S3_SECRET_KEY: "{{ vaultops_s3_secret_key }}"
        loop: "{{ pv_vault_info_map | dict2items }}"

      - name: Vaultops | Prepare | Validate sha256sum
        ansible.builtin.stat:
            path: "{{ vaultops_tmp_dir_path }}/vault_{{ vault_rv_version }}_linux_{{ item.key }}.zip"
            checksum_algorithm: sha256
            get_checksum: true
            follow: false
            get_mime: false
            get_attributes: true
        loop: "{{ pv_vault_info_map | dict2items }}"
        register: vault_binary_stat
        failed_when: >-
            vault_binary_stat.failed
            or
            vault_binary_stat.stat.checksum != item.value['sha256sum'][vault_rv_version]

- name: Vaultops | Add Host Keys
  hosts: vault_vm_servers,vault_nodes_servers
  gather_facts: false
  become: false
  timeout: 100
  tags: patch,patch_install,patch_beautify,vault,vault_system_install,vault_node_install,vault_dr,never
  any_errors_fatal: true
  no_log: "{{ pv_global_config_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Add Host Keys | Add keys to known_hosts file /tmp/vault_vm_server_ssh_known_hosts
        become: false
        ansible.builtin.known_hosts:
            name: "{{ ansible_host }}"
            key: "{{ ansible_host }} {{ item }}"
            path: "{{ vault_vm_server_ssh_user_known_hosts_file }}"
            state: present
        delegate_to: localhost
        loop: "{{ host_keys }}"
        throttle: 1

- name: Vaultops | Vault
  hosts: vault_vm_servers
  gather_facts: false
  become: false
  timeout: 100
  any_errors_fatal: true
  no_log: "{{ pv_global_config_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Vault | Patch | Install
        become: true
        tags: patch,patch_install,never
        ansible.builtin.import_tasks:
            file: tasks/patch.yml

      - name: Vaultops | Vault | Patch | Beautify
        become: false
        tags: patch,patch_beautify,never
        ansible.builtin.import_tasks:
            file: tasks/beautify.yml

      - name: Vaultops | Vault | Install | System
        become: true
        tags: vault,vault_system_install,vault_dr,never
        ansible.builtin.import_tasks:
            file: tasks/install.yml

- name: Vaultops | Vault Virtual Node Server
  hosts: vault_nodes_servers
  gather_facts: false
  become: false
  timeout: 100
  any_errors_fatal: true
  no_log: "{{ pv_global_config_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Vault Virtual Node Server | Install
        become: true
        tags: vault,vault_node_install,vault_dr,never
        ansible.builtin.import_tasks:
            file: tasks/install_node.yml

      - name: Vaultops | Vault Virtual Node Server | DR
        become: true
        tags: vault_dr,never
        ansible.builtin.import_tasks:
            file: tasks/dr.yml

- name: Vaultops | Downstream
  hosts: localhost
  gather_facts: false
  become: false
  timeout: 100
  any_errors_fatal: true
  no_log: "{{ pv_global_config_no_log | default('true') }}"
  tasks:
      - name: Vaultops | Downstream | github.com
        become: true
        tags: downstream,never,downstream_github
        ansible.builtin.import_tasks:
            file: tasks/github.yml
