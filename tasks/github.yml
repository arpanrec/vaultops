---
- name: Vaultops | Downstream | github.com | Login
  community.hashi_vault.vault_login:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      auth_method: userpass
      username: "{{ vault_ha_client.admin_user }}"
      password: "{{ vault_ha_client.admin_password }}"
      mount_point: "{{ vault_ha_client.userpass_mount }}"
      validate_certs: true
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"
  register: pv_tmp_vault_downstream_github_com_login_res

- name: Vaultops | Downstream | github.com | Set Token
  ansible.builtin.set_fact:
      pv_tmp_vault_downstream_github_login_token: "{{ pv_tmp_vault_downstream_github_com_login_res.\
          login.auth.client_token }}"

- name: Vaultops | Downstream | github.com | Get
  community.hashi_vault.vault_kv2_get:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: external_services/github
      token: "{{ pv_tmp_vault_downstream_github_login_token }}"
      validate_certs: true
  register: gh_prod_api_token_res
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Vaultops | Downstream | github.com | Set Token
  ansible.builtin.set_fact:
      gh_prod_api_token: "{{ gh_prod_api_token_res.data.data.GH_PROD_API_TOKEN }}"

- name: Vaultops | Downstream | github.com | Get secret-id
  community.hashi_vault.vault_write:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: auth/approle/role/github-master-controller/secret-id
      token: "{{ pv_tmp_vault_downstream_github_login_token }}"
      validate_certs: true
  register: github_master_controller_secret_id
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Vaultops | Downstream | github.com | Create Vault Client Certificate
  community.hashi_vault.vault_write:
      url: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"
      path: pki/issue/vault_client_certificate
      token: "{{ pv_tmp_vault_downstream_github_login_token }}"
      validate_certs: true
      data:
          common_name: "{{ vault_ha_client.vault_ha_hostname }}"
  register: pv_tmp_vault_downstream_github_com_vault_client_cert
  environment:
      VAULT_CACERT: "{{ vault_ha_client.vault_root_ca_cert_file }}"
      VAULT_CLIENT_CERT: "{{ vault_ha_client.vault_client_cert_file }}"
      VAULT_CLIENT_KEY: "{{ vault_ha_client.vault_client_key_file }}"

- name: Vaultops | Downstream | github.com | Create Repository
  community.general.github_repo:
      access_token: "{{ gh_prod_api_token }}"
      name: github-master-controller
      description: "Github master Controller"
      private: false
      state: present
      force_defaults: true
  register: pv_scmint_github_repo_create

- name: Vaultops | Downstream | github.com | Create environment
  ansible.builtin.uri:
      url: "{{ pv_scmint_github_repo_create.repo.url }}/environments/production"
      method: PUT
      validate_certs: true
      return_content: true
      body_format: json
      body:
          wait_timer: 0
          deployment_branch_policy:
              protected_branches: false
              custom_branch_policies: true
      headers:
          "Accept": "application/vnd.github.v3"
          "content-type": "application/vnd.github+json"
          "authorization": "Bearer {{ gh_prod_api_token }}"
  register: pv_scmint_tmp_github_master_controller_repo_env_create

- name: Vaultops | Downstream | github.com | Create or Update a repository secret
  github_action_secret:
      api_ep: "https://api.github.com"
      pat: "{{ gh_prod_api_token }}"
      is_secret: "{{ item.is_secret | default(omit) }}"
      state: present
      environment: "{{ pv_scmint_tmp_github_master_controller_repo_env_create.json.name }}"
      unencrypted_value: "{{ item.unencrypted_secret }}"
      repository: "{{ pv_scmint_github_repo_create.repo.full_name }}"
      name: "{{ item.name }}"
      is_base64_encoded: "{{ item.base64 | default(omit) }}"
  loop:
      - name: VAULT_APPROLE_SECRET_ID
        unencrypted_secret: "{{ github_master_controller_secret_id.data.data.secret_id }}"
      - name: VAULT_CLIENT_PRIVATE_KEY_CONTENT_BASE64
        unencrypted_secret: "{{ pv_tmp_vault_downstream_github_com_vault_client_cert.data.data.private_key }}"
        base64: true
      - name: VAULT_CLIENT_CERTIFICATE_CONTENT_BASE64
        unencrypted_secret: "{{ pv_tmp_vault_downstream_github_com_vault_client_cert.data.data.certificate }}\n\
            {{ pv_tmp_vault_downstream_github_com_vault_client_cert.data.data.ca_chain | join('\n') }}"
        base64: true
      - name: ROOT_CA_CERTIFICATE_CONTENT_BASE64
        unencrypted_secret: "{{ pv_tmp_vault_downstream_github_com_vault_client_cert.data.data.ca_chain | last }}"
        base64: true
      - name: VAULT_ADDR
        unencrypted_secret: "https://{{ vault_ha_client.vault_ha_hostname }}:{{ vault_ha_client.vault_ha_port }}"

- name: Vaultops | Downstream | github.com | Github Actions Workflow Details
  ansible.builtin.uri:
      url: "{{ pv_scmint_github_repo_create.repo.url }}/actions/workflows/deploy.yml"
      method: GET
      status_code: [200, 404]
      validate_certs: true
      return_content: true
      body_format: json
      headers:
          "Accept": "application/vnd.github+json"
          "authorization": "Bearer {{ gh_prod_api_token }}"
  register: pv_scmint_tmp_github_master_controller_repo_dispatch

- name: Vaultops | Downstream | github.com | Dispatch Workflow
  ansible.builtin.uri:
      url: "{{ pv_scmint_github_repo_create.repo.url }}/actions/workflows/deploy.yml/dispatches"
      method: POST
      validate_certs: true
      return_content: true
      body_format: json
      body:
          ref: "{{ pv_scmint_github_repo_create.repo.default_branch }}"
          inputs: {}
      headers:
          "Accept": "application/vnd.github+json"
          "authorization": "Bearer {{ gh_prod_api_token }}"
  when: pv_scmint_tmp_github_master_controller_repo_dispatch.status == 200
