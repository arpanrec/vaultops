---
name: Linting

on: # yamllint disable-line rule:truthy
    push:
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    pylint:
        runs-on: ubuntu-latest
        name: pylint
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python "3.10"
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: pip
                  cache-dependency-path: .github/files/requirements.txt

            - name: Install dependencies
              run: |-
                  set -ex
                  python -m pip install -r .github/files/requirements.txt
                  poetry config virtualenvs.create false --local
                  poetry install

            - name: Analysing the code with pylint
              run: |+
                  set -ex
                  pylint $(git ls-files '*.py')

    black:
        runs-on: ubuntu-latest
        name: black
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python "3.10"
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: pip
                  cache-dependency-path: .github/files/requirements.txt

            - name: Install dependencies
              run: |-
                  set -ex
                  python -m pip install -r .github/files/requirements.txt
                  poetry config virtualenvs.create false --local
                  poetry install

            - name: Analysing the code with black
              run: |+
                  set -ex
                  black --check $(git ls-files '*.py')
    isort:
        runs-on: ubuntu-latest
        name: isort
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python "3.10"
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: pip
                  cache-dependency-path: .github/files/requirements.txt

            - name: Install dependencies
              run: |-
                  set -ex
                  python -m pip install -r .github/files/requirements.txt
                  poetry config virtualenvs.create false --local
                  poetry install

            - name: Analysing the code with isort
              run: |+
                  set -ex
                  isort --check-only $(git ls-files '*.py')
    mypy:
        runs-on: ubuntu-latest
        name: mypy
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python "3.10"
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: pip
                  cache-dependency-path: .github/files/requirements.txt

            - name: Install dependencies
              run: |-
                  set -ex
                  python -m pip install -r .github/files/requirements.txt
                  poetry config virtualenvs.create false --local
                  poetry install

            - name: Analysing the code with mypy
              run: |+
                  set -ex
                  mypy $(git ls-files '*.py') --check-untyped-defs

    yamllint:
        runs-on: ubuntu-latest
        name: yamllint
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python "3.10"
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: pip
                  cache-dependency-path: .github/files/requirements.txt

            - name: Install dependencies
              run: |-
                  set -ex
                  python -m pip install -r .github/files/requirements.txt
                  poetry config virtualenvs.create false --local
                  poetry install

            - name: Analysing the code with yamllint
              run: |+
                  set -ex
                  yamllint .

    ansible-lint:
        runs-on: ubuntu-latest
        name: ansible-lint
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python "3.10"
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: pip
                  cache-dependency-path: .github/files/requirements.txt

            - name: Cache ansible
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.ansible
                      ~/.cache/ansible-*
                  key: ansible-cache-${{ hashFiles('**/requirements.yml') }}

            - name: Install dependencies
              run: |-
                  set -ex
                  python -m pip install -r .github/files/requirements.txt
                  poetry config virtualenvs.create false --local
                  poetry install
                  ansible-galaxy install -r requirements.yml

            - name: Analysing the code with ansible-lint
              run: |+
                  set -ex
                  ansible-lint

    terraform-fmt:
        runs-on: ubuntu-latest
        name: terraform-fmt
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Analysing the code with terraform
              run: |
                  set -ex
                  terraform fmt -check=true -recursive
